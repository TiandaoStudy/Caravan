"use strict";angular.module("todomvc",["ngRoute"]).config(function($routeProvider){var routeConfig={controller:"TodoCtrl",templateUrl:"todomvc-index.html",resolve:{store:function(todoStorage){return todoStorage.then(function(module){return module.get(),module})}}};$routeProvider.when("/",routeConfig).when("/:status",routeConfig).otherwise({redirectTo:"/"})});angular.module("todomvc").controller("TodoCtrl",function($scope,$routeParams,$filter,store){var todos=$scope.todos=store.todos;$scope.newTodo="";$scope.editedTodo=null;$scope.$watch("todos",function(){$scope.remainingCount=$filter("filter")(todos,{completed:!1}).length;$scope.completedCount=todos.length-$scope.remainingCount;$scope.allChecked=!$scope.remainingCount},!0);$scope.$on("$routeChangeSuccess",function(){var status=$scope.status=$routeParams.status||"";$scope.statusFilter=status==="active"?{completed:!1}:status==="completed"?{completed:!0}:{}});$scope.addTodo=function(){var newTodo={title:$scope.newTodo.trim(),completed:!1};newTodo.title&&($scope.saving=!0,store.insert(newTodo).then(function(){$scope.newTodo=""})["finally"](function(){$scope.saving=!1}))};$scope.editTodo=function(todo){$scope.editedTodo=todo;$scope.originalTodo=angular.extend({},todo)};$scope.saveEdits=function(todo,event){if(event==="blur"&&$scope.saveEvent==="submit"){$scope.saveEvent=null;return}if($scope.saveEvent=event,$scope.reverted){$scope.reverted=null;return}if(todo.title=todo.title.trim(),todo.title===$scope.originalTodo.title){$scope.editedTodo=null;return}store[todo.title?"put":"delete"](todo).then(function(){},function(){todo.title=$scope.originalTodo.title})["finally"](function(){$scope.editedTodo=null})};$scope.revertEdits=function(todo){todos[todos.indexOf(todo)]=$scope.originalTodo;$scope.editedTodo=null;$scope.originalTodo=null;$scope.reverted=!0};$scope.removeTodo=function(todo){store["delete"](todo)};$scope.saveTodo=function(todo){store.put(todo)};$scope.toggleCompleted=function(todo,completed){angular.isDefined(completed)&&(todo.completed=completed);store.put(todo,todos.indexOf(todo)).then(function(){},function(){todo.completed=!todo.completed})};$scope.clearCompletedTodos=function(){store.clearCompleted()};$scope.markAll=function(completed){todos.forEach(function(todo){todo.completed!==completed&&$scope.toggleCompleted(todo,completed)})}});angular.module("todomvc").factory("todoStorage",function($http,$injector){return $http.get("/api").then(function(){return $injector.get("api")},function(){return $injector.get("localStorage")})}).factory("api",function($http){var store={todos:[],clearCompleted:function(){var originalTodos=store.todos.slice(0),completeTodos=[],incompleteTodos=[];return store.todos.forEach(function(todo){todo.completed?completeTodos.push(todo):incompleteTodos.push(todo)}),angular.copy(incompleteTodos,store.todos),$http["delete"]("/api/todos").then(function(){return store.todos},function(){return angular.copy(originalTodos,store.todos),originalTodos})},"delete":function(todo){var originalTodos=store.todos.slice(0);return store.todos.splice(store.todos.indexOf(todo),1),$http["delete"]("/api/todos/"+todo.id).then(function(){return store.todos},function(){return angular.copy(originalTodos,store.todos),originalTodos})},get:function(){return $http.get("/api/todos").then(function(resp){return angular.copy(resp.data,store.todos),store.todos})},insert:function(todo){var originalTodos=store.todos.slice(0);return $http.post("/api/todos",todo).then(function(resp){return todo.id=resp.data.id,store.todos.push(todo),store.todos},function(){return angular.copy(originalTodos,store.todos),store.todos})},put:function(todo){var originalTodos=store.todos.slice(0);return $http.put("/api/todos/"+todo.id,todo).then(function(){return store.todos},function(){return angular.copy(originalTodos,store.todos),originalTodos})}};return store}).factory("localStorage",function($q){var STORAGE_ID="todos-angularjs",store={todos:[],_getFromLocalStorage:function(){return JSON.parse(localStorage.getItem(STORAGE_ID)||"[]")},_saveToLocalStorage:function(todos){localStorage.setItem(STORAGE_ID,JSON.stringify(todos))},clearCompleted:function(){var deferred=$q.defer(),completeTodos=[],incompleteTodos=[];return store.todos.forEach(function(todo){todo.completed?completeTodos.push(todo):incompleteTodos.push(todo)}),angular.copy(incompleteTodos,store.todos),store._saveToLocalStorage(store.todos),deferred.resolve(store.todos),deferred.promise},"delete":function(todo){var deferred=$q.defer();return store.todos.splice(store.todos.indexOf(todo),1),store._saveToLocalStorage(store.todos),deferred.resolve(store.todos),deferred.promise},get:function(){var deferred=$q.defer();return angular.copy(store._getFromLocalStorage(),store.todos),deferred.resolve(store.todos),deferred.promise},insert:function(todo){var deferred=$q.defer();return store.todos.push(todo),store._saveToLocalStorage(store.todos),deferred.resolve(store.todos),deferred.promise},put:function(todo,index){var deferred=$q.defer();return store.todos[index]=todo,store._saveToLocalStorage(store.todos),deferred.resolve(store.todos),deferred.promise}};return store});angular.module("todomvc").directive("todoEscape",function(){var ESCAPE_KEY=27;return function(scope,elem,attrs){elem.bind("keydown",function(event){event.keyCode===ESCAPE_KEY&&scope.$apply(attrs.todoEscape)});scope.$on("$destroy",function(){elem.unbind("keydown")})}});angular.module("todomvc").directive("todoFocus",function($timeout){return function(scope,elem,attrs){scope.$watch(attrs.todoFocus,function(newVal){newVal&&$timeout(function(){elem[0].focus()},0,!1)})}});