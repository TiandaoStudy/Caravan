<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Finsa.Caravan.WebService</name>
    </assembly>
    <members>
        <member name="T:Finsa.Caravan.WebService.CaravanWebServiceConfiguration">
            <summary>
              Configuration class for Caravan.Common. Default values are set inside the configuration
              file itself.
            </summary>
        </member>
        <member name="P:Finsa.Caravan.WebService.CaravanWebServiceConfiguration.Instance">
            <summary>
              Gets the static configuration instance.
            </summary>
            <value>The static configuration instance.</value>
        </member>
        <member name="P:Finsa.Caravan.WebService.CaravanWebServiceConfiguration.Identity_SigningCertificatePath">
            <summary>
              Il percorso del certificato richiesto dal servizio di autorizzazione/autenticazione
              per firmare i TOKEN emessi.
            </summary>
        </member>
        <member name="P:Finsa.Caravan.WebService.CaravanWebServiceConfiguration.Identity_SigningCertificatePassword">
            <summary>
              La password del certificato richiesto dal servizio di autorizzazione/autenticazione
              per firmare i TOKEN emessi.
            </summary>
        </member>
        <member name="T:Finsa.Caravan.WebService.Controllers.CacheController">
            <summary>
              Exposes the KVLite cache controller and allows further customizations.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.CacheController.#ctor(PommaLabs.KVLite.ICache)">
            <summary>
              Injects the <see cref="T:PommaLabs.KVLite.ICache"/> dependency into the base controller.
            </summary>
            <param name="cache">The cache.</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.CacheController.DeleteItem(System.String,System.String)">
            <summary>
              Deletes an item stored in the cache with given partition and key.
            </summary>
            <param name="partition">The partition.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.CacheController.DeleteItems">
            <summary>
              Deletes all items stored in the cache.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.CacheController.DeletePartitionItems(System.String)">
            <summary>
              Deletes all items stored in the cache with given partition.
            </summary>
            <param name="partition">The partition.</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.CacheController.GetItem(System.String,System.String)">
            <summary>
              Returns a _valid_ item stored in the cache for given partition and key.
            </summary>
            <param name="partition">The partition.</param>
            <param name="key">The key.</param>
            <returns>A _valid_ item stored in the cache for given partition and key.</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.CacheController.GetItems(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
              Returns all _valid_ items stored in the cache which follow given search criteria.
              Values are omitted, in order to keep the response small.
            </summary>
            <param name="partitionLike">
              Optional, a substring that should be contained in the partition of the items.
            </param>
            <param name="keyLike">
              Optional, a substring that should be contained in the key of the items.
            </param>
            <param name="fromExpiry">Optional, the minimum expiry date items should have.</param>
            <param name="toExpiry">Optional, the maximum expiry date items should have.</param>
            <param name="fromCreation">Optional, the minimum creation date items should have.</param>
            <param name="toCreation">Optional, the maximum creation date items should have.</param>
            <returns>All _valid_ items stored in the cache which follow given search criteria.</returns>
            <remarks>Value is not serialized in the response, since it might be truly heavy.</remarks>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.CacheController.GetItemsWithValues(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
              Returns all _valid_ items stored in the cache which follow given search criteria.
              Values are included in the response.
            </summary>
            <param name="partitionLike">
              Optional, a substring that should be contained in the partition of the items.
            </param>
            <param name="keyLike">
              Optional, a substring that should be contained in the key of the items.
            </param>
            <param name="fromExpiry">Optional, the minimum expiry date items should have.</param>
            <param name="toExpiry">Optional, the maximum expiry date items should have.</param>
            <param name="fromCreation">Optional, the minimum creation date items should have.</param>
            <param name="toCreation">Optional, the maximum creation date items should have.</param>
            <returns>All _valid_ items stored in the cache which follow given search criteria.</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.CacheController.GetPartitionItems(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
              Returns all _valid_ items stored in the cache for given partition which follow given
              search criteria. Values are omitted, in order to keep the response small.
            </summary>
            <param name="partition">The partition.</param>
            <param name="keyLike">
              Optional, a substring that should be contained in the key of the items.
            </param>
            <param name="fromExpiry">Optional, the minimum expiry date items should have.</param>
            <param name="toExpiry">Optional, the maximum expiry date items should have.</param>
            <param name="fromCreation">Optional, the minimum creation date items should have.</param>
            <param name="toCreation">Optional, the maximum creation date items should have.</param>
            <returns>
              All _valid_ items stored in the cache for given partition which follow given search criteria.
            </returns>
            <remarks>Value is not serialized in the response, since it might be truly heavy.</remarks>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.CacheController.GetPartitionItemsWithValues(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
              Returns all _valid_ items stored in the cache for given partition which follow given
              search criteria. Values are included in the response.
            </summary>
            <param name="partition">The partition.</param>
            <param name="keyLike">
              Optional, a substring that should be contained in the key of the items.
            </param>
            <param name="fromExpiry">Optional, the minimum expiry date items should have.</param>
            <param name="toExpiry">Optional, the maximum expiry date items should have.</param>
            <param name="fromCreation">Optional, the minimum creation date items should have.</param>
            <param name="toCreation">Optional, the maximum creation date items should have.</param>
            <returns>
              All _valid_ items stored in the cache for given partition which follow given search criteria.
            </returns>
        </member>
        <member name="T:Finsa.Caravan.WebService.Controllers.HelpController">
            <summary>
              The HELP controller.
            </summary>
            <remarks>Adjust routing prefix according to your own needs.</remarks>
            <remarks>Questo servizio dovrebbe essere esposto pubblicamente.</remarks>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.HelpController.Get">
            <summary>
              Redirects to Swagger help pages.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.HelpController.GetVersion">
            <summary>
              Returns the web service version written in the main assembly.
            </summary>
        </member>
        <member name="T:Finsa.Caravan.WebService.Controllers.IdentityController">
            <summary>
              Servizi di utilità per la parte di gestione dell'identità.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.IdentityController.GetSha256(System.String)">
            <summary>
              Calcola l'hash in SHA256 per il secret dato. Utile per popolare le tabelle dei secret.
            </summary>
            <param name="secret">Il secret di cui si deve calcolare l'hash in SHA256.</param>
            <returns>L'hash SHA256 del secret dato.</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.IdentityController.GetSha512(System.String)">
            <summary>
              Calcola l'hash in SHA512 per il secret dato. Utile per popolare le tabelle dei secret.
            </summary>
            <param name="secret">Il secret di cui si deve calcolare l'hash in SHA512.</param>
            <returns>L'hash SHA512 del secret dato.</returns>
        </member>
        <member name="T:Finsa.Caravan.WebService.Controllers.LoggerController">
            <summary>
              Controller che si occupa della parte di logging.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.#ctor(Common.Logging.ILog,Finsa.CodeServices.Clock.IClock,Finsa.Caravan.Common.Logging.ICaravanLogRepository)">
            <summary>
              Inizializza il controller con l'istanza del log di Caravan.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.GetPing">
            <summary>
              Writes a silly message into the log.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.GetPing(System.String)">
            <summary>
              Writes a silly message into the log.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.GetEntries(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
              Returns all log entries.
            </summary>
            <param name="appName">Application name</param>
            <returns>All log entries.</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.GetEntries(System.String,Common.Logging.LogLevel,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
              returns all logs of a specified logLevel
            </summary>
            <param name="appName">Application name</param>
            <param name="logLevel">Type of log which can be "warn", "info" or "error"</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.GetEntry(System.String,System.Int64)">
            <summary>
              returns a logs of with specified ID
            </summary>
            <param name="appName">Application name</param>
            <param name="logId">ID of the entry</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.PostLog(System.String,Finsa.Caravan.Common.Logging.Models.LogEntry)">
            <summary>
              Add a new log with the features specified in the body of the request
            </summary>
            <param name="appName">Application name</param>
            <param name="logEntry">The log to add</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.PostLog(System.String,Common.Logging.LogLevel,Finsa.Caravan.Common.Logging.Models.LogEntry)">
            <summary>
              Add
            </summary>
            <param name="appName">Application name</param>
            <param name="logLevel">Type of log which can be "warn", "info" or "error"</param>
            <param name="logEntry">The log to add</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.DeleteLog(System.String,System.Int32)">
            <summary>
              Delete log with the specified id in the specified application
            </summary>
            <param name="appName">The application name</param>
            <param name="logId">The id of the log to delete which can be "warn", "info" or "error"</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.GetSettings">
            <summary>
              Returns all settings of the current application
            </summary>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.GetSettings(System.String)">
            <summary>
              Returns all settings of the specified application
            </summary>
            <param name="appName">Application name</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.GetSettings(System.String,Common.Logging.LogLevel)">
            <summary>
              Returns all settings of a specified logLevel
            </summary>
            <param name="appName"></param>
            <param name="logLevel">Type of log which can be "warn", "info" or "error"</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.PostSetting(System.String,Common.Logging.LogLevel,Finsa.Caravan.Common.Logging.Models.LogSetting)">
            <summary>
              Add a new setting of type = logLevel
            </summary>
            <param name="appName">Application name</param>
            <param name="logLevel">Type of log which can be "warn", "info" or "error"</param>
            <param name="settings">The setting to add</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.PutSetting(System.String,Common.Logging.LogLevel,Finsa.Caravan.Common.Logging.Models.LogSetting)">
            <summary>
              Update the setting of a particular logLevel
            </summary>
            <param name="appName">Application name</param>
            <param name="logLevel">Type of log which can be "warn", "info" or "error"</param>
            <param name="settings">The new data setting</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.LoggerController.DeleteSetting(System.String,Common.Logging.LogLevel)">
            <summary>
              Deletes setting of the logtype specified in the specified application
            </summary>
            <param name="appName">Application name</param>
            <param name="logLevel">Type of log which can be "warn", "info" or "error"</param>
        </member>
        <member name="T:Finsa.Caravan.WebService.Controllers.SecurityController">
            <summary>
              Controller che si occupa della gestione della sicurezza.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.#ctor(Finsa.Caravan.Common.Security.ICaravanSecurityRepository,Finsa.Caravan.Common.Security.ICaravanUserManagerFactory,Finsa.Caravan.Common.Security.ICaravanGroupManagerFactory)">
            <summary>
              Inizializza il controller con l'istanza della sicurezza di Caravan.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetApps">
            <summary>
              Returns all the applications
            </summary>
            <returns>All the applications</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetApp(System.String)">
            <summary>
              Returns all details of the specified application
            </summary>
            <param name="appName">The application to show</param>
            <returns>All the details of the specified application</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.PostApp(Finsa.Caravan.Common.Security.Models.SecApp)">
            <summary>
              Insert a new application
            </summary>
            <param name="app">The application to insert</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetUsers(System.String)">
            <summary>
              Returns all the users of the specified application
            </summary>
            <param name="appName">Application name</param>
            <returns>All the users of the specified application</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetUserByLogin(System.String,System.Int64)">
            <summary>
              Return details on the specified group belong to the specified application
            </summary>
            <param name="appName">The application name</param>
            <param name="userId">The group name</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetUserByLogin(System.String,System.String)">
            <summary>
              Return details on the specified group belong to the specified application
            </summary>
            <param name="appName">The application name</param>
            <param name="userLogin">The group name</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.PostUser(System.String,Finsa.Caravan.Common.Security.Models.SecUser)">
            <summary>
              Add a new user in the specified application
            </summary>
            <param name="appName">Application name</param>
            <param name="user">The new user to add</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.PutUserByLogin(System.String,System.String,Finsa.Caravan.Common.Security.Models.SecUserUpdates)">
            <summary>
              Update the user with the specified userLogin in the specified application
            </summary>
            <param name="appName">The application name</param>
            <param name="userLogin">The user login</param>
            <param name="userUpdates">The user containing element to update</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.DeleteUserByLogin(System.String,System.String)">
            <summary>
              Delete the user with the specified user login from the specified application
            </summary>
            <param name="appName">the application name</param>
            <param name="userLogin">the user login</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.PostUserToGroup(System.String,System.String,System.String)">
            <summary>
              Add a user to a the specified group of the specified application
            </summary>
            <param name="appName">The application name</param>
            <param name="userLogin">The user login of the user to add</param>
            <param name="groupName">The group name</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.DeleteUserFromGroup(System.String,System.String,System.String)">
            <summary>
              Delete the user with the specified login from the specified group
            </summary>
            <param name="appName">The application name</param>
            <param name="userLogin">The user login</param>
            <param name="groupName">The group name</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetGroups(System.String)">
            <summary>
              Returns all groups of the specified application
            </summary>
            <param name="appName">The application name</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetGroupById(System.String,System.Int32)">
            <summary>
              Return details on the specified group belong to the specified application
            </summary>
            <param name="appName">The application name</param>
            <param name="groupId">The group name</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetGroupByName(System.String,System.String)">
            <summary>
              Return details on the specified group belong to the specified application
            </summary>
            <param name="appName">The application name</param>
            <param name="groupName">The group name</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.PostGroup(System.String,Finsa.Caravan.Common.Security.Models.SecGroup)">
            <summary>
              Add a new group to the specified application
            </summary>
            <param name="appName">The application name</param>
            <param name="group">Group to add</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.PutGroupByName(System.String,System.String,Finsa.Caravan.Common.Security.Models.SecGroupUpdates)">
            <summary>
              Update the specified group
            </summary>
            <param name="appName">The application name</param>
            <param name="groupName">The group name</param>
            <param name="groupUpdates">The group containing element/s to update</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.DeleteGroupByName(System.String,System.String)">
            <summary>
              Remove the group specified from the application specified
            </summary>
            <param name="appName">The application name</param>
            <param name="groupName">The group name</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetContexts(System.String)">
            <summary>
              Returns all contexts of the specified application
            </summary>
            <param name="appName">The application name</param>
            <returns>All contexts of the specified application</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetObjects(System.String,System.String)">
            <summary>
              Returns all objects in the specified context
            </summary>
            <param name="appName">The application name.</param>
            <param name="contextName">The optional context name</param>
            <returns>All objects in the specified context</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetEntries(System.String)">
            <summary>
              Returns all entries of the specified application
            </summary>
            <param name="appName">The application name</param>
            <returns>All entries of the specified application</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetEntries(System.String,System.String)">
            <summary>
              Returns all the entries of the specified context
            </summary>
            <param name="appName">the application name</param>
            <param name="contextName">The context name</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetEntriesForUser(System.String,System.String,System.String)">
            <summary>
              Returns all the entries of the specified user
            </summary>
            <param name="appName">the application name</param>
            <param name="contextName">The context name</param>
            <param name="userLogin">The user login name</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetEntriesForObject(System.String,System.String,System.String)">
            <summary>
              Returns all the entries of the specified object
            </summary>
            <param name="appName">the application name</param>
            <param name="contextName">The context name</param>
            <param name="objectName">The object name</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.GetEntriesForObject(System.String,System.String,System.String,System.String)">
            <summary>
              Returns all the entries of the specified object
            </summary>
            <param name="appName">the application name</param>
            <param name="contextName">The context name</param>
            <param name="objectName">The object name</param>
            <param name="userLogin">The user login</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.PostEntry(System.String,Finsa.Caravan.WebService.Controllers.SecurityController.SecEntryForAdd)">
            <summary>
              Add a new entry in the specified application withe the specified parameters
            </summary>
            <param name="appName">The application name</param>
            <param name="entry">The entry to add</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.SecurityController.DeleteEntry(System.String,System.String,System.String,System.String,System.String)">
            <summary>
              Delete the specified entry from the application
            </summary>
            <param name="appName">The application name</param>
            <param name="contextname">The context name</param>
            <param name="objectName">The object name</param>
            <param name="userLogin">The user login (must be null if the group name is present)</param>
            <param name="groupName">The group name (must be null if the user login is present)</param>
        </member>
        <member name="T:Finsa.Caravan.WebService.Controllers.ValuesController">
            <summary>
              Sample controller with basic interactions.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.ValuesController.Get">
            <summary>
              Returns all values.
            </summary>
            <returns>All values.</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.ValuesController.Get(System.Int32)">
            <summary>
              Looks up some data from ID.
            </summary>
            <param name="id">The id of the data.</param>
            <returns>The value of the data.</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.ValuesController.Post(System.String)">
            <summary>
              Adds given value.
            </summary>
            <param name="value">Value of the api</param>
            <returns></returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.ValuesController.Put(System.Int32,System.String)">
            <summary>
              Add at the api with id "id", the value "value"
            </summary>
            <param name="id">id of the api</param>
            <param name="value">the value to add</param>
        </member>
        <member name="M:Finsa.Caravan.WebService.Controllers.ValuesController.Delete(System.Int32)">
            <summary>
              Delete the api with the Id retrieve from the body
            </summary>
            <param name="id">The id of the api to remove</param>
        </member>
        <member name="T:Finsa.Caravan.WebService.IdentityConfig">
            <summary>
              Configurazione del servizio di autorizzazione/autenticazione.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.IdentityConfig.LoadCertificate">
            <summary>
              Carica il certificato necessario per firmare i TOKEN.
            </summary>
            <returns>Il certificato necessario per firmare i TOKEN.</returns>
        </member>
        <member name="M:Finsa.Caravan.WebService.IdentityConfig.ConfigureFactory">
            <summary>
              Configura il generatore dei servizi usati dalla parte di autenticazione/autorizzazione.
            </summary>
            <returns>La factory per IdentityServer.</returns>
        </member>
        <member name="T:Finsa.Caravan.WebService.Startup">
            <summary>
              Inizializza il servizio di Caravan.
            </summary>
        </member>
        <member name="M:Finsa.Caravan.WebService.Startup.Configuration(Owin.IAppBuilder)">
            <summary>
              Inizializza il servizio di Caravan.
            </summary>
            <param name="app">Necessario per configurare il servizio.</param>
        </member>
    </members>
</doc>
