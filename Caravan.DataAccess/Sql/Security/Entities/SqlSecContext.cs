using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;

namespace Finsa.Caravan.DataAccess.Sql.Security.Entities
{
    [Serializable]
    public class SqlSecContext
    {
        [Key, Column("CCTX_ID", Order = 0)]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        public virtual int Id { get; set; }

        [Required, Column("CAPP_ID", Order = 1)]
        [Index("UK_CRVN_SEC_CONTEXTS", 0, IsUnique = true)]
        public virtual int AppId { get; set; }

        [Required, Column("CCTX_NAME", Order = 2)]
        [MaxLength(SqlDbContext.MediumLength /* Might be autogenerated */)]
        [Index("UK_CRVN_SEC_CONTEXTS", 1, IsUnique = true)]
        public virtual string Name { get; set; }

        [Column("CCTX_DESCR", Order = 3)]
        [MaxLength(SqlDbContext.LargeLength)]
        public virtual string Description { get; set; }

        #region Relationships

        public virtual SqlSecApp App { get; set; }

        public virtual ICollection<SqlSecObject> Objects { get; set; }

        #endregion Relationships
    }

    /// <summary>
    ///   Configurazione della mappatura per <see cref="SqlSecContext"/>.
    /// </summary>
    public sealed class SqlSecContextTypeConfiguration : EntityTypeConfiguration<SqlSecContext>
    {
        /// <summary>
        ///   Configurazione della mappatura per <see cref="SqlSecContext"/>.
        /// </summary>
        public SqlSecContextTypeConfiguration()
        {
            ToTable("CRVN_SEC_CONTEXTS", CaravanDataAccessConfiguration.Instance.SqlSchema);

            // SqlSecContext(N) <-> SqlSecApp(1)
            HasRequired(x => x.App)
                .WithMany(x => x.Contexts)
                .HasForeignKey(x => x.AppId)
                .WillCascadeOnDelete(true);
        }
    }
}
