!function(n){var t=function(t,i,r){r&&(r.stopPropagation(),r.preventDefault());this.$element=n(t);this.$newElement=null;this.button=null;this.label=null;this.labelPrepend=null;this.options=n.extend({},n.fn.checkbox.defaults,this.$element.data(),typeof i=="object"&&i);this.displayAsButton=this.options.displayAsButton;this.buttonStyle=this.options.buttonStyle;this.buttonStyleChecked=this.options.buttonStyleChecked;this.defaultState=this.options.defaultState;this.defaultEnabled=this.options.defaultEnabled;this.indeterminate=this.options.indeterminate;this.init()};t.prototype={constructor:t,init:function(){var t,i,n;for(this.$element.hide(),this.$element.attr("autocomplete","off"),t=this.$element.attr("class")!==undefined?this.$element.attr("class").split(/\s+/):"",i=this.getTemplate(),this.$element.after(i),this.$newElement=this.$element.next(".bootstrap-checkbox"),this.button=this.$newElement.find("button"),this.label=this.$newElement.find("span.label-checkbox"),this.labelPrepend=this.$newElement.find("span.label-prepend-checkbox"),n=0;n<t.length;n++)t[n]!="checkbox"&&this.$newElement.addClass(t[n]);this.button.addClass(this.buttonStyle);this.$element.data("default-state")!=undefined&&(this.defaultState=this.$element.data("default-state"));this.$element.data("default-enabled")!=undefined&&(this.defaultEnabled=this.$element.data("default-enabled"));this.$element.data("display-as-button")!=undefined&&(this.displayAsButton=this.$element.data("display-as-button"));this.$element.data("indeterminate")!=undefined&&(this.indeterminate=this.$element.data("indeterminate"));this.indeterminate&&this.$element.prop("indeterminate",!0);this.checkEnabled();this.checkChecked();this.checkTabIndex();this.clickListener()},getTemplate:function(){var r=this.displayAsButton?" displayAsButton":"",t=this.$element.data("label")?'<span class="label-checkbox">'+this.$element.data("label")+"<\/span>":"",i=this.$element.data("label-prepend")?'<span class="label-prepend-checkbox">'+this.$element.data("label-prepend")+"<\/span>":"",n='<span class="button-checkbox bootstrap-checkbox"><button type="button" class="btn clearfix'+r+'">'+(this.$element.data("label-prepend")&&this.displayAsButton?i:"")+'<span class="icon '+this.options.checkedClass+'" style="display:none;"><\/span><span class="icon '+this.options.uncheckedClass+'"><\/span><span class="icon '+this.options.indeterminateClass+'" style="display:none;"><\/span>'+(this.$element.data("label")&&this.displayAsButton?t:"")+"<\/button><\/span>";return!this.displayAsButton&&(this.$element.data("label")||this.$element.data("label-prepend"))&&(n='<label class="'+this.options.labelClass+'">'+i+n+t+"<\/label>"),n},checkEnabled:function(){this.button.attr("disabled",this.$element.is(":disabled"));this.$newElement.toggleClass("disabled",this.$element.is(":disabled"))},checkTabIndex:function(){if(this.$element.is("[tabindex]")){var n=this.$element.attr("tabindex");this.button.attr("tabindex",n)}},checkChecked:function(){var t=/\s/g,i=".";this.$element.prop("indeterminate")==!0?(this.button.find("span."+this.options.checkedClass.replace(t,i)).hide(),this.button.find("span."+this.options.uncheckedClass.replace(t,i)).hide(),this.button.find("span."+this.options.indeterminateClass.replace(t,i)).show()):(this.$element.is(":checked")?(this.button.find("span."+this.options.checkedClass.replace(t,i)).show(),this.button.find("span."+this.options.uncheckedClass.replace(t,i)).hide()):(this.button.find("span."+this.options.checkedClass.replace(t,i)).hide(),this.button.find("span."+this.options.uncheckedClass.replace(t,i)).show()),this.button.find("span."+this.options.indeterminateClass.replace(t,i)).hide());this.$element.is(":checked")?this.buttonStyleChecked&&(this.button.removeClass(this.buttonStyle),this.button.addClass(this.buttonStyleChecked)):this.buttonStyleChecked&&(this.button.removeClass(this.buttonStyleChecked),this.button.addClass(this.buttonStyle));this.$element.is(":checked")?this.options.labelClassChecked&&n(this.$element).next("label").addClass(this.options.labelClassChecked):this.options.labelClassChecked&&n(this.$element).next("label").removeClass(this.options.labelClassChecked)},clickListener:function(){var n=this;this.button.on("click",function(t){t.preventDefault();n.$element.prop("indeterminate",!1);n.$element[0].click();n.checkChecked()});this.$element.on("change",function(){n.checkChecked()});this.$element.parents("form").on("reset",function(t){n.defaultState==null?n.$element.prop("indeterminate",!0):n.$element.prop("checked",n.defaultState);n.$element.prop("disabled",!n.defaultEnabled);n.checkEnabled();n.checkChecked();t.preventDefault()})},setOptions:function(n){n.checked!=undefined&&this.setChecked(n.checked);n.enabled!=undefined&&this.setEnabled(n.enabled);n.indeterminate!=undefined&&this.setIndeterminate(n.indeterminate)},setChecked:function(n){this.$element.prop("checked",n);this.$element.prop("indeterminate",!1);this.checkChecked()},setIndeterminate:function(n){this.$element.prop("indeterminate",n);this.checkChecked()},click:function(){this.$element.prop("indeterminate",!1);this.$element[0].click();this.checkChecked()},change:function(){this.$element.change()},setEnabled:function(n){this.$element.attr("disabled",!n);this.checkEnabled()},toggleEnabled:function(){this.$element.attr("disabled",!this.$element.is(":disabled"));this.checkEnabled()},refresh:function(){this.checkEnabled();this.checkChecked()}};n.fn.checkbox=function(i,r){return this.each(function(){var f=n(this),u=f.data("checkbox"),e=typeof i=="object"&&i;u?typeof i=="string"?u[i](r):typeof i!="undefined"&&u.setOptions(i,r):(f.data("checkbox",u=new t(this,e,r)),u.options.constructorCallback!=undefined&&u.options.constructorCallback(u.$element,u.button,u.label,u.labelPrepend))})};n.fn.checkbox.defaults={displayAsButton:!1,indeterminate:!1,buttonStyle:"btn-link",buttonStyleChecked:null,checkedClass:"cb-icon-check",uncheckedClass:"cb-icon-check-empty",indeterminateClass:"cb-icon-check-indeterminate",defaultState:!1,defaultEnabled:!0,constructorCallback:null,labelClass:"checkbox bootstrap-checkbox",labelClassChecked:"active"}}(window.jQuery);
/*
//# sourceMappingURL=bootstrap-checkbox.min.js.map
*/